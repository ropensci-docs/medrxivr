[{"path":"https://docs.ropensci.org/medrxivr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Development community effort, welcome participation.","code":""},{"path":"https://docs.ropensci.org/medrxivr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note package released Contributor Code Conduct.","code":""},{"path":"https://docs.ropensci.org/medrxivr/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"https://github.com/ropensci/medrxivr/issues maintenance tasks feature requests. post, please abide guidelines https://books.ropensci.org/targets/help.html.","code":""},{"path":"https://docs.ropensci.org/medrxivr/CONTRIBUTING.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Contributing","text":"External code contributions extremely helpful right circumstances. recommended steps. Prior contribution, please propose idea discussion thread maintainer can define intent scope work. Fork repository. Follow GitHub flow create new branch, add commits, open pull request. Discuss code maintainer pull request thread. everything looks good, maintainer merge code project. Please also follow additional guidelines. Respect architecture reasoning package. Depending scope work, may want read design documents (package vignettes). possible, keep contributions small enough easily review manually. okay split work multiple pull requests. Format code according tidyverse style guide check formatting lint_package() function lintr package. new features functionality, add tests tests. Tests can automated go tests/testthat/. Tests automated go tests/interactive/. features affecting performance, good practice add profiling studies tests/performance/. Check code coverage covr::package_coverage(). Automated tests cover new changed functionality pull request. Run overall package checks devtools::check() goodpractice::gp() Describe contribution project’s NEWS.md file. sure mention relevent GitHub issue numbers GitHub name done existing news entries. feel contribution substantial enough official author contributor status, please add Authors@R field DESCRIPTION file.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"building-your-search-with-boolean-operators","dir":"Articles","previous_headings":"","what":"Building your search with Boolean operators","title":"Building complex search strategies","text":"First load medrxivr package: find records contain many terms, pass terms vector mx_search() function, code chunk . Query terms can include regular expression syntax - see section end document common regular expression may useful searching. find records relevant one topic domain, create vector topic (note: upper limit number topics can ) combine vectors list passed mx_search() function:","code":"library(medrxivr) myquery <- c(\"dementia\",\"vascular\",\"alzheimer's\") # Combined with Boolean OR  mx_results <- mx_search(data = mx_snapshot(),     # Use daily snapshot for data                         query = myquery) #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 2272 record(s) matching your search. topic1  <- c(\"dementia\",\"vascular\",\"alzheimer's\")  # Combined with Boolean OR topic2  <- c(\"lipids\",\"statins\",\"cholesterol\")     # Combined with Boolean OR myquery <- list(topic1, topic2)                    # Combined with Boolean AND  mx_results <- mx_search(data = mx_snapshot(),                         query = myquery) #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 143 record(s) matching your search."},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"limit-search-by-field","dir":"Articles","previous_headings":"Additional filters and options","what":"Limit search by field","title":"Building complex search strategies","text":"default, range fields (title, abstract, first author, subject, link (contains DOI)) searched, can limit search subset using fields argument:","code":"# Limit search to title/abstract mx_results <- mx_search(data = mx_snapshot(),                         query = \"dementia\",                         fields = c(\"title\",\"abstract\")) #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 427 record(s) matching your search.  # Search by DOI mx_results <- mx_search(data = mx_snapshot(),                         query = \"10.1101/2020.01.30.20019836\",                         fields = \"link\") #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 1 record(s) matching your search."},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"exclude-records-containing-certain-terms","dir":"Articles","previous_headings":"Additional filters and options","what":"Exclude records containing certain terms","title":"Building complex search strategies","text":"Often useful able exclude records contain certain term relevant search. example, search , looking records related “dementia” alone excluding mention “mild cognitive impairment”:","code":"mx_results <- mx_search(data = mx_snapshot(),                         query = \"dementia\",                         NOT = \"[Mm]ild cognitive impairment\") #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 366 record(s) matching your search."},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"limit-by-date-posted","dir":"Articles","previous_headings":"Additional filters and options","what":"Limit by date posted","title":"Building complex search strategies","text":"can define either/earliest latest date wish include records . Note: search inclusive dates specified:","code":"mx_results <- mx_search(data = mx_snapshot(),                         query = \"dementia\",                         from_date = \"2020-01-01\",      # 1st Jan 2020                         to_date = \"2020-01-08\")        # 8th Jan 2020 #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 2 record(s) matching your search."},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"return-multiple-versions-of-a-record","dir":"Articles","previous_headings":"Additional filters and options","what":"Return multiple versions of a record","title":"Building complex search strategies","text":"medRxiv allows authors upload new version preprint often like. default, medrxivr returns recent version preprint, interested exploring record changed time, can retrieve versions preprint setting deduplicate = FALSE","code":"mx_results <- mx_search(data = mx_snapshot(),                         query = \"10.1101/2020.01.30.20019836\",                         fields = \"link\",                         deduplicate = FALSE) #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 4 record(s) matching your search. #> Note, there may be >1 version of the same record."},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"capitalisation","dir":"Articles","previous_headings":"Useful syntax for the systematic reviewer","what":"Capitalisation","title":"Building complex search strategies","text":"Example regex: [Dd]ementiaDescription: search case sensitive, syntax allows find Dementia dementia using single term, rather enter separately. However, setting autocaps argument mx_search() TRUE automatically search capitalised uncapitalised versions search terms (e.g. auto_caps = TRUE just need search “dementia” find Dementia dementia - behind scenes, “dementia” converted “[Dd]ementia”.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"wildcard","dir":"Articles","previous_headings":"Useful syntax for the systematic reviewer","what":"Wildcard","title":"Building complex search strategies","text":"Example regex: randomi*ationDescription: wildcard operator “*” defines single alphanumeric character - case, term find randomisation randomization.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"near","dir":"Articles","previous_headings":"Useful syntax for the systematic reviewer","what":"NEAR","title":"Building complex search strategies","text":"Example regex: systematic NEAR4 reviewDescription: “NEAR4” operator defines 4 words can systematic review search still find . change far apart terms allowed , simply change number following NEAR (e.g. find terms one word apart, syntax systematic NEAR1 review). Please note search directional, example term find “systematic methods review”, find “review systematic”.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"word-limits","dir":"Articles","previous_headings":"Useful syntax for the systematic reviewer","what":"Word limits","title":"Building complex search strategies","text":"Example regex: \\\\bNCOV\\\\bDescription: Sometimes useful able define start end terms. example, searching NCOV-19, simply using ncov search term also return records containing uncovered. Using \\\\b allows define term beings ends, thus excluding false positive matches.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"example-using-these-regexes","dir":"Articles","previous_headings":"Useful syntax for the systematic reviewer","what":"Example using these regexes","title":"Building complex search strategies","text":"find records contain “Mendelian” within 4 words “randomisation” (varying capitalisation “Mendelian” UK/US spellings “randomisation”), following syntax correct:","code":"mx_results <- mx_search(data = mx_snapshot(),                         query = \"mendelian NEAR4 randomi*ation\",                          auto_caps = TRUE) #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 431 record(s) matching your search."},{"path":"https://docs.ropensci.org/medrxivr/articles/building-complex-search-strategies.html","id":"regex-tester","dir":"Articles","previous_headings":"Useful syntax for the systematic reviewer","what":"Regex tester","title":"Building complex search strategies","text":"check whether search term find expect , useful regex tester, designed Adam Spannbauer.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxiv-api.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Interacting with the Cold Spring Harbour Laboratory API","text":"Cold Spring Harbour Laboratory API provides direct interface medRxiv bioRxiv databases. However, API allow perform searches, instead providing two endpoints return either content two specified dates information held particular DOI. medrxivr provides two convenience functions importing data provided endpoints R: mx_api_content() mx_api_doi(). results either function can passed mx_search() searching.","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxiv-api.html","id":"by-date-range-mx_api_content","dir":"Articles","previous_headings":"Background","what":"By date range (mx_api_content())","title":"Interacting with the Cold Spring Harbour Laboratory API","text":"format endpoint https://api.biorxiv.org/details/[server]/[interval]/[cursor] ‘interval’ must two YYYY-MM-DD dates separated ‘/’. metadata multiple papers returned, results paginated 100 papers served call. ‘cursor’ value can used iterate result. mx_api_content() automatically moves pages , capturing records returned endpoint returning R object. instance, https://api.biorxiv.org/details/medrxiv/2020-01-01/2020-01-31/0 output 100 results (many remain) within date range 2020-01-01 2020-01-31 beginning result 1. import R dataframe:","code":"medrxiv_data <- mx_api_content(from_date = \"2020-01-01\",                                 to_date = \"2020-01-05\") #> Estimated total number of records as per API metadata: 33 #> Number of records retrieved from API: 33   biorxiv_data <- mx_api_content(server = \"biorxiv\",                                from_date = \"2020-01-01\",                                 to_date = \"2020-01-05\") #> Estimated total number of records as per API metadata: 286 #> Number of records retrieved from API: 286"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxiv-api.html","id":"by-doi-mx_api_doi","dir":"Articles","previous_headings":"Background","what":"By DOI (mx_api_doi())","title":"Interacting with the Cold Spring Harbour Laboratory API","text":"https://api.biorxiv.org/details/[server]/[DOI] returns detail single manuscript. instance, https://api.biorxiv.org/details/medrxiv/10.1101/2020.02.25.20021568 output metadata medRxiv paper DOI 10.1101/2020.02.25.20021568. import results endpoint R dataframe:","code":"mx_api_doi(doi = \"10.1101/2020.02.25.20021568\") #> # A tibble: 2 × 15 #>   doi    title authors author_corresponding author_corresponding…¹ date  version #>   <chr>  <chr> <chr>   <chr>                <chr>                  <chr> <chr>   #> 1 10.11… Deep… Chen, … Honggang Yu          Renmin Hospital of Wu… 2020… 1       #> 2 10.11… Deep… Chen, … Honggang Yu          Renmin Hospital of Wu… 2020… 2       #> # ℹ abbreviated name: ¹​author_corresponding_institution #> # ℹ 8 more variables: license <chr>, category <chr>, jatsxml <chr>, #> #   abstract <chr>, published <chr>, node <int>, link_page <chr>, #> #   link_pdf <chr>"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxiv-api.html","id":"accessing-the-raw-api-data","dir":"Articles","previous_headings":"","what":"Accessing the raw API data","title":"Interacting with the Cold Spring Harbour Laboratory API","text":"functions contain clean argument set TRUE default. ensure datasets returned mx_api_*() functions can immediately passed mx_search(). However, may occasions required, setting argument FALSE return raw data provided API endpoints. example:","code":"mx_api_content(to_date = \"2019-07-01\", clean = FALSE) #> Estimated total number of records as per API metadata: 32 #> Number of records retrieved from API: 32 #> # A tibble: 32 × 14 #>    doi   title authors author_corresponding author_corresponding…¹ date  version #>    <chr> <chr> <chr>   <chr>                <chr>                  <chr> <chr>   #>  1 10.1… Mole… Daniel… Robert Castelo       \"Department of Experi… 2019… 1       #>  2 10.1… Croh… Orna G… Orna G Ehrlich       \"Crohn\\\\'s & Colitis … 2019… 1       #>  3 10.1… Upda… Joshua… Joshua D Wallach     \"Yale School of Publi… 2019… 1       #>  4 10.1… Pred… Oliver… Olivera Stojanovic   \"Institute of Cogniti… 2019… 1       #>  5 10.1… Pros… Nathan… Nathan Brajer        \"Duke University Scho… 2019… 1       #>  6 10.1… Tren… Brian … Ben Goldacre         \"University of Oxford\" 2019… 1       #>  7 10.1… 18F-… Nicola… Nicolas Nicastro     \"University of Cambri… 2019… 1       #>  8 10.1… Perc… Sistan… Lena H Ting          \"Emory University\"     2019… 1       #>  9 10.1… Prox… Tesfa … Tesfa Dejenie Habte… \"Department of Epidem… 2019… 1       #> 10 10.1… Tran… Alexan… Alexandre Vivot      \"APHP\"                 2019… 1       #> # ℹ 22 more rows #> # ℹ abbreviated name: ¹​author_corresponding_institution #> # ℹ 7 more variables: type <chr>, license <chr>, category <chr>, jatsxml <chr>, #> #   abstract <chr>, published <chr>, server <chr>"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get started","text":"can install development version package using:","code":"devtools::install_github(\"mcguinlu/medrxivr\") library(medrxivr)"},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"medrxiv-data","dir":"Articles","previous_headings":"Data sources","what":"medRxiv data","title":"Get started","text":"medrixvr provides two ways access medRxiv data: mx_api_content(server = \"medrxiv\") creates local copy data available medRxiv API time function run. mx_snapshot() provides access static snapshot medRxiv database. snapshot created morning 6am using mx_api_content() stored CSV file medrxivr-data repository. method rely API (can become unavailable peak usage times) usually faster (reads data CSV rather re-extract API). Discrepancies recent static snapshot live database can assessed using mx_crosscheck(). relationship two methods medRxiv database summarised figure :","code":"# Get a copy of the database from the live medRxiv API endpoint preprint_data <- mx_api_content() # Get a copy of the database from the daily snapshot preprint_data <- mx_snapshot()"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"biorxiv-data","dir":"Articles","previous_headings":"Data sources","what":"bioRxiv data","title":"Get started","text":"one data source exists bioRxiv repository: mx_api_content(server = \"biorxiv\") creates local copy data available bioRxiv API endpoint time function run. Note: due ’s size, downloading complete copy bioRxiv repository manner takes long time (~ 1 hour).","code":"# Get a copy of the database from the live bioRxiv API endpoint preprint_data <- mx_api_content(server = \"biorxiv\")"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"performing-your-search","dir":"Articles","previous_headings":"","what":"Performing your search","title":"Get started","text":"created local copy either medRxiv bioRxiv preprint database, can pass object (preprint_data examples ) mx_search() search preprint records using advanced search strategy.","code":"# Perform a simple search results <- mx_search(data = preprint_data,                      query =\"dementia\")  # Perform an advanced search topic1  <- c(\"dementia\",\"vascular\",\"alzheimer's\")  # Combined with Boolean OR topic2  <- c(\"lipids\",\"statins\",\"cholesterol\")     # Combined with Boolean OR myquery <- list(topic1, topic2)                    # Combined with Boolean AND  results <- mx_search(data = preprint_data,                      query = myquery)"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"dataset-description","dir":"Articles","previous_headings":"","what":"Dataset description","title":"Get started","text":"dataset (case, results) returned search function contains 14 variables:","code":""},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"export-records-identified-by-your-search-to-a--bib-file","dir":"Articles","previous_headings":"","what":"Export records identified by your search to a .BIB file","title":"Get started","text":"medrxivr provides helper function export search results .BIB file can easily imported reference manager (e.g. Zotero, Mendeley)","code":"mx_export(data = mx_results,           file = tempfile(fileext = \".bib\"))"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"download-pdfs-for-records-identified-by-your-search","dir":"Articles","previous_headings":"","what":"Download PDFs for records identified by your search","title":"Get started","text":"Pass results search (results) mx_download() function download copy PDF record.","code":"mx_download(results,        # Object returned by mx_search             tempdir(),      # Temporary directory to save PDFs to              create = TRUE)  # Create the directory if it doesn't exist"},{"path":"https://docs.ropensci.org/medrxivr/articles/medrxivr.html","id":"further-guidance","dir":"Articles","previous_headings":"","what":"Further guidance","title":"Get started","text":"Please see medrxivr website vignette extended guidance developing search strategies detailed instructions interacting Cold Springs Harbour API medRxiv bioRxiv.","code":""},{"path":"https://docs.ropensci.org/medrxivr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yaoxiang Li. Author, maintainer. Luke McGuinness. Author. Lena Schmidt. Author. Tuija Sonkkila. Reviewer. Najko Jahn. Reviewer.","code":""},{"path":"https://docs.ropensci.org/medrxivr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li Y, McGuinness L, Schmidt L (2024). medrxivr: Access Search MedRxiv BioRxiv Preprint Data. R package version 0.1.1, https://github.com/ropensci/medrxivr.","code":"@Manual{,   title = {medrxivr: Access and Search MedRxiv and BioRxiv Preprint Data},   author = {Yaoxiang Li and Luke McGuinness and Lena Schmidt},   year = {2024},   note = {R package version 0.1.1},   url = {https://github.com/ropensci/medrxivr}, }"},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"medrxivr-","dir":"","previous_headings":"","what":"Access and Search MedRxiv and BioRxiv Preprint Data","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"increasingly important source health-related bibliographic content preprints - preliminary versions research articles yet undergo peer review. two preprint repositories relevant health-related sciences medRxiv bioRxiv, operated Cold Spring Harbor Laboratory. goal medrxivr R package two-fold. first instance, provides programmatic access Cold Spring Harbour Laboratory (CSHL) API, allowing users easily download medRxiv bioRxiv preprint metadata (e.g. title, abstract, publication date, author list, etc) R. package also provides access maintained static snapshot medRxiv repository (see Data sources). Secondly, medrxivr provides functions search downloaded preprint records using regular expressions Boolean logic, well helper functions allow users export search results .BIB file easy import reference manager download full-text PDFs preprints matching search criteria.","code":""},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"install stable version package CRAN: Alternatively, install development version GitHub, use following code:","code":"install.packages(\"medrxivr\") library(medrxivr) install.packages(\"devtools\") devtools::install_github(\"ropensci/medrxivr\") library(medrxivr)"},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"medrxiv-data","dir":"","previous_headings":"Data sources","what":"medRxiv data","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"medrixvr provides two ways access medRxiv data: mx_api_content(server = \"medrxiv\") creates local copy data available medRxiv API time function run. mx_snapshot() provides access static snapshot medRxiv database. snapshot created morning 6am using mx_api_content() stored CSV file medrxivr-data repository. method rely API (can become unavailable peak usage times) usually faster (reads data CSV rather re-extract API). Discrepancies recent static snapshot live database can assessed using mx_crosscheck(). relationship two methods medRxiv database summarised figure :","code":"# Get a copy of the database from the live medRxiv API endpoint preprint_data <- mx_api_content() # Get a copy of the database from the daily snapshot preprint_data <- mx_snapshot()"},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"biorxiv-data","dir":"","previous_headings":"Data sources","what":"bioRxiv data","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"one data source exists bioRxiv repository: mx_api_content(server = \"biorxiv\") creates local copy data available bioRxiv API endpoint time function run. Note: due ’s size, downloading complete copy bioRxiv repository manner takes long time (~ 1 hour).","code":"# Get a copy of the database from the live bioRxiv API endpoint preprint_data <- mx_api_content(server = \"biorxiv\")"},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"performing-your-search","dir":"","previous_headings":"","what":"Performing your search","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"created local copy either medRxiv bioRxiv preprint database, can pass object (preprint_data examples ) mx_search() search preprint records using advanced search strategy. can also explore search terms contributing search setting report = TRUE:","code":"# Import the medrxiv database preprint_data <- mx_snapshot() #> Using medRxiv snapshot - 2022-07-06 01:09  # Perform a simple search results <- mx_search(data = preprint_data,                      query =\"dementia\") #> Found 427 record(s) matching your search.  # Perform an advanced search topic1  <- c(\"dementia\",\"vascular\",\"alzheimer's\")  # Combined with Boolean OR topic2  <- c(\"lipids\",\"statins\",\"cholesterol\")     # Combined with Boolean OR myquery <- list(topic1, topic2)                    # Combined with Boolean AND  results <- mx_search(data = preprint_data,                      query = myquery) #> Found 143 record(s) matching your search. results <- mx_search(data = preprint_data,                      query = myquery,                      report = TRUE) #> Found 143 record(s) matching your search. #> Total topic 1 records: 2272 #> dementia: 427 #> vascular: 1918 #> alzheimer's: 0 #> Total topic 2 records: 410 #> lipids: 157 #> statins: 61 #> cholesterol: 255"},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"export-records-identified-by-your-search-to-a-bib-file","dir":"","previous_headings":"Further functionality","what":"Export records identified by your search to a .BIB file","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"Pass results search (results object) mx_export() export references preprints matching search results .BIB file can easily imported reference manager (e.g. Zotero, Mendeley).","code":"mx_export(data = results,           file = \"mx_search_results.bib\")"},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"download-pdfs-for-records-returned-by-your-search","dir":"","previous_headings":"Further functionality","what":"Download PDFs for records returned by your search","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"Pass results search (results object) mx_download() function download copy PDF record found search.","code":"mx_download(results,        # Object returned by mx_search(), above             \"pdf/\",         # Directory to save PDFs to              create = TRUE)  # Create the directory if it doesn't exist"},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"accessing-the-raw-api-data","dir":"","previous_headings":"","what":"Accessing the raw API data","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"default, mx_api_*() functions clean data returned API use medrxivr functions. access raw data returned API, clean argument set FALSE: See article details.","code":"mx_api_content(to_date = \"2019-07-01\", clean = FALSE)"},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"detailed-guidance","dir":"","previous_headings":"","what":"Detailed guidance","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"Detailed guidance, including advice design complex search strategies, available medrxivr website.","code":""},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"linked-repositories","dir":"","previous_headings":"","what":"Linked repositories","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"See code used take daily snapshot code powers medrxivr web app.","code":""},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"other-toolspackages-for-working-with-medrxivbiorxiv-data","dir":"","previous_headings":"","what":"Other tools/packages for working with medRxiv/bioRxiv data","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"focus medrxivr providing tools allow users import search medRxiv bioRxiv data. list complementary packages provide distinct related functionality working medRxiv bioRxiv data: rbiorxiv Nicholas Fraser provides access medRxiv bioRxiv content data medrxivr, also provides access usage data (e.g. downloads per month) Cold Spring Harbour Laboratory API offers. useful wish explore, example, number PDF downloads bioRxiv grown time.","code":""},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/medrxivr/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Access and Search MedRxiv and BioRxiv Preprint Data","text":"package data accesses/returns provided “”, guarantee accuracy. Please sure check accuracy data (let know find issue can fix everyone!)","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/api_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Create link for API — api_link","title":"Create link for API — api_link","text":"Create link API","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/api_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create link for API — api_link","text":"","code":"api_link(...)"},{"path":"https://docs.ropensci.org/medrxivr/reference/api_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create link for API — api_link","text":"... Arguments specify path API endpoint","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/api_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create link for API — api_link","text":"Formatted link API endpoint","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/api_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert API data to data frame — api_to_df","title":"Convert API data to data frame — api_to_df","text":"Convert API data data frame","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/api_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert API data to data frame — api_to_df","text":"","code":"api_to_df(url)"},{"path":"https://docs.ropensci.org/medrxivr/reference/api_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert API data to data frame — api_to_df","text":"url API endpoint extract format data","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/api_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert API data to data frame — api_to_df","text":"Raw API data dataframe","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/clean_api_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper script to clean data from API to make it compatible with mx_search() — clean_api_df","title":"Helper script to clean data from API to make it compatible with mx_search() — clean_api_df","text":"Helper script clean data API make compatible mx_search()","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/clean_api_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper script to clean data from API to make it compatible with mx_search() — clean_api_df","text":"","code":"clean_api_df(df)"},{"path":"https://docs.ropensci.org/medrxivr/reference/clean_api_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper script to clean data from API to make it compatible with mx_search() — clean_api_df","text":"df Raw dataframe API","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/clean_api_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper script to clean data from API to make it compatible with mx_search() — clean_api_df","text":"Cleaned dataframe","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_caps.html","id":null,"dir":"Reference","previous_headings":"","what":"Allow for capitalisation of search terms — fix_caps","title":"Allow for capitalisation of search terms — fix_caps","text":"Allow capitalisation search terms","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_caps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allow for capitalisation of search terms — fix_caps","text":"","code":"fix_caps(x)"},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_caps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allow for capitalisation of search terms — fix_caps","text":"x Search query formatted. Note, search term already containing square bracket reformatted preserve user-defined regexes.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_caps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allow for capitalisation of search terms — fix_caps","text":"list vector search terms, proper regular   expression syntax allow capitalisation first letter   term.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_near.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace user-friendly 'NEAR' operator with appropriate regex syntax — fix_near","title":"Replace user-friendly 'NEAR' operator with appropriate regex syntax — fix_near","text":"Replace user-friendly 'NEAR' operator appropriate regex syntax","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_near.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace user-friendly 'NEAR' operator with appropriate regex syntax — fix_near","text":"","code":"fix_near(x)"},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_near.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace user-friendly 'NEAR' operator with appropriate regex syntax — fix_near","text":"x Search query reformatted","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_wildcard.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace user-friendly 'wildcard' operator with appropriate regex syntax — fix_wildcard","title":"Replace user-friendly 'wildcard' operator with appropriate regex syntax — fix_wildcard","text":"Replace user-friendly 'wildcard' operator appropriate regex syntax","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_wildcard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace user-friendly 'wildcard' operator with appropriate regex syntax — fix_wildcard","text":"","code":"fix_wildcard(x)"},{"path":"https://docs.ropensci.org/medrxivr/reference/fix_wildcard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace user-friendly 'wildcard' operator with appropriate regex syntax — fix_wildcard","text":"x Search query reformatted","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/internet_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the user has internet, and returns a helpful message it not. — internet_check","title":"Checks whether the user has internet, and returns a helpful message it not. — internet_check","text":"Checks whether user internet, returns helpful message .","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/internet_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the user has internet, and returns a helpful message it not. — internet_check","text":"","code":"internet_check()"},{"path":"https://docs.ropensci.org/medrxivr/reference/internet_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the user has internet, and returns a helpful message it not. — internet_check","text":"Informative error connected internet","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/medrxivr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"medrxivr: Accessing medRxiv and bioRxiv preprint data from R — medrxivr-package","title":"medrxivr: Accessing medRxiv and bioRxiv preprint data from R — medrxivr-package","text":"medrxivr package enables users access data preprints medRxiv bioRxiv preprints repositories, run Cold Spring Harbour Laboratory.also provides functions search preprint data, export .bib file, download PDFs associated specified records.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/medrxivr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"medrxivr: Accessing medRxiv and bioRxiv preprint data from R — medrxivr-package","text":"Maintainer: Yaoxiang Li liyaoxiang@outlook.com (ORCID) Authors: Luke McGuinness Lena Schmidt contributors: Tuija Sonkkila [reviewer] Najko Jahn [reviewer]","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Access medRxiv/bioRxiv data via the Cold Spring Harbour Laboratory API — mx_api_content","title":"Access medRxiv/bioRxiv data via the Cold Spring Harbour Laboratory API — mx_api_content","text":"Provides programmatic access preprints available   Cold Spring Harbour Laboratory API, serves medRxiv   bioRxiv preprint repositories.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access medRxiv/bioRxiv data via the Cold Spring Harbour Laboratory API — mx_api_content","text":"","code":"mx_api_content(   from_date = \"2013-01-01\",   to_date = as.character(Sys.Date()),   clean = TRUE,   server = \"medrxiv\",   include_info = FALSE )"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access medRxiv/bioRxiv data via the Cold Spring Harbour Laboratory API — mx_api_content","text":"from_date Earliest date interest, written \"YYYY-MM-DD\". Defaults 1st Jan 2013 (\"2013-01-01\"), ~6 months prior earliest preprint registration date. to_date Latest date interest, written \"YYYY-MM-DD\". Defaults current date. clean Logical, defaulting TRUE, indicating whether clean data returned API. TRUE, variables containing absolute paths preprints web-page (\"link_page\") PDF (\"link_pdf\") generated \"server\", \"DOI\", \"version\" variables returned API. \"title\", \"abstract\" \"authors\" variables converted title case. Finally, \"type\" \"server\" variables dropped. server Specify server wish use: \"medrxiv\" (default) \"biorxiv\" include_info Logical, indicating whether include variables containing information returned API (e.g. API status, cursor number, total count papers, etc). Default FALSE.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access medRxiv/bioRxiv data via the Cold Spring Harbour Laboratory API — mx_api_content","text":"Dataframe 1 record per row","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access medRxiv/bioRxiv data via the Cold Spring Harbour Laboratory API — mx_api_content","text":"","code":"if (interactive()) {   mx_data <- mx_api_content(     from_date = \"2020-01-01\",     to_date = \"2020-01-07\"   ) }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Access data on a single medRxiv/bioRxiv record via the Cold Spring Harbour Laboratory API — mx_api_doi","title":"Access data on a single medRxiv/bioRxiv record via the Cold Spring Harbour Laboratory API — mx_api_doi","text":"Provides programmatic access data single preprint   identified unique Digital Object Identifier (DOI).","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access data on a single medRxiv/bioRxiv record via the Cold Spring Harbour Laboratory API — mx_api_doi","text":"","code":"mx_api_doi(doi, server = \"medrxiv\", clean = TRUE)"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access data on a single medRxiv/bioRxiv record via the Cold Spring Harbour Laboratory API — mx_api_doi","text":"doi Digital object identifier preprint wish retrieve data . server Specify server wish use: \"medrxiv\" (default) \"biorxiv\" clean Logical, defaulting TRUE, indicating whether clean data returned API. TRUE, variables containing absolute paths preprints web-page (\"link_page\") PDF (\"link_pdf\") generated \"server\", \"DOI\", \"version\" variables returned API. \"title\", \"abstract\" \"authors\" variables converted title case. Finally, \"type\" \"server\" variables dropped.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access data on a single medRxiv/bioRxiv record via the Cold Spring Harbour Laboratory API — mx_api_doi","text":"Dataframe containing details preprint identified DOI.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_api_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access data on a single medRxiv/bioRxiv record via the Cold Spring Harbour Laboratory API — mx_api_doi","text":"","code":"if (interactive()) {   mx_data <- mx_api_doi(\"10.1101/2020.02.25.20021568\") }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_caps.html","id":null,"dir":"Reference","previous_headings":"","what":"Search term wrapper that allows for different capitalization of term — mx_caps","title":"Search term wrapper that allows for different capitalization of term — mx_caps","text":"Inspired varying capitalization \"NCOV\"   corona virus pandemic (e.g. ncov, nCoV, NCOV, nCOV), function allows   possible configurations lower- upper-case letters   search term.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_caps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search term wrapper that allows for different capitalization of term — mx_caps","text":"","code":"mx_caps(x)"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_caps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search term wrapper that allows for different capitalization of term — mx_caps","text":"x Search term formatted","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_caps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search term wrapper that allows for different capitalization of term — mx_caps","text":"input string return, non-space character   repeated lower- upper-case, enclosed square brackets.   example, mx_caps(\"ncov\") returns \"[Nn][Cc][Oo][Vv]\"","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_caps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search term wrapper that allows for different capitalization of term — mx_caps","text":"","code":"# \\donttest{  query <- c(\"coronavirus\", mx_caps(\"ncov\"))  mx_search(mx_snapshot(\"6c4056d2cccd6031d92ee4269b1785c6ec4d555b\"), query) #> Using medRxiv snapshot - 2020-08-22 15:42 #> Found 1856 record(s) matching your search. #> # A tibble: 1,856 × 14 #>       ID title                abstract authors date       category doi   version #>    <int> <chr>                <chr>    <chr>   <date>     <chr>    <chr>   <int> #>  1    88 Higher energy requi… \"Backgr… Ebbeli… 2019-07-11 Nutriti… 10.1…       1 #>  2   676 Resilience to domin… \"Here w… Lacaze… 2019-10-22 Genetic… 10.1…       1 #>  3   501 Patterns of Autism … \"We sim… Lefort… 2019-09-27 Psychia… 10.1…       1 #>  4  1371 Novel coronavirus 2… \"Since … Read, … 2020-01-28 Infecti… 10.1…       2 #>  5  1426 Incubation Period a… \"The ge… Linton… 2020-02-18 Infecti… 10.1…       2 #>  6  1430 Epidemiological ide… \"Object… Jung, … 2020-02-03 Epidemi… 10.1…       2 #>  7  1465 Estimating the effe… \"We est… Cao, Z… 2020-01-29 Infecti… 10.1…       1 #>  8  1446 The incubation peri… \"Curren… Backer… 2020-01-30 Infecti… 10.1…       2 #>  9  1475 Estimated effective… \"Travel… Gostic… 2020-02-03 Epidemi… 10.1…       2 #> 10  1473 Risk for Transporta… \"On Jan… Du, Z.… 2020-02-17 Epidemi… 10.1…       4 #> # ℹ 1,846 more rows #> # ℹ 6 more variables: author_corresponding <chr>, #> #   author_corresponding_institution <chr>, link_page <chr>, link_pdf <chr>, #> #   license <chr>, published <chr> # }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_crosscheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Check how up-to-date the maintained medRxiv snapshot is — mx_crosscheck","title":"Check how up-to-date the maintained medRxiv snapshot is — mx_crosscheck","text":"Provides information --date maintained medRxiv   snapshot provided `mx_snapshot()` checking whether   records added , updated , medRxiv repository since last   snapshot taken.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_crosscheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check how up-to-date the maintained medRxiv snapshot is — mx_crosscheck","text":"","code":"mx_crosscheck()"},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_crosscheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check how up-to-date the maintained medRxiv snapshot is — mx_crosscheck","text":"","code":"# \\donttest{ mx_crosscheck() #> Using medRxiv snapshot - 2022-07-06 01:09 #> 31569 new record(s) added/updated since last snapshot # }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download PDF's of preprints returned by a search — mx_download","title":"Download PDF's of preprints returned by a search — mx_download","text":"Download PDF's papers search results","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download PDF's of preprints returned by a search — mx_download","text":"","code":"mx_download(   mx_results,   directory,   create = TRUE,   name = c(\"ID\", \"DOI\"),   print_update = 10 )"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download PDF's of preprints returned by a search — mx_download","text":"mx_results Vector containing links medRxiv PDFs directory location want download PDF's create TRUE FALSE. TRUE, creates directory exist name name downloaded PDF. default, ID number record DOI used. print_update frequently print update","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download PDF's of preprints returned by a search — mx_download","text":"","code":"# \\donttest{ mx_results <- mx_search(mx_snapshot(), query = \"10.1101/2020.02.25.20021568\") #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 1 record(s) matching your search. mx_download(mx_results, directory = tempdir()) #> Estimated time to completion: 0 hours #> Downloading PDF 1 of 1 (DOI: 2094_10.1101_2020.02.25.20021568). . .  # }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export references for preprints returning by a search to a .bib file — mx_export","title":"Export references for preprints returning by a search to a .bib file — mx_export","text":"Export references preprints returning search .bib file","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export references for preprints returning by a search to a .bib file — mx_export","text":"","code":"mx_export(data, file = \"medrxiv_export.bib\")"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export references for preprints returning by a search to a .bib file — mx_export","text":"data Dataframe returned mx_search() mx_api_*() functions file File location save . Must .bib file extension","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export references for preprints returning by a search to a .bib file — mx_export","text":"Exports formatted .BIB file, import reference manager","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export references for preprints returning by a search to a .bib file — mx_export","text":"","code":"# \\donttest{ mx_results <- mx_search(mx_snapshot(), query = \"brain\") #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 1627 record(s) matching your search. mx_export(mx_results, tempfile(fileext = \".bib\")) #> References exported to /tmp/RtmpVC742q/file9016cc15366.bib # }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide information on the medRxiv snapshot used to perform the search — mx_info","title":"Provide information on the medRxiv snapshot used to perform the search — mx_info","text":"Provide information medRxiv snapshot used perform search","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide information on the medRxiv snapshot used to perform the search — mx_info","text":"","code":"mx_info(commit = \"master\")"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide information on the medRxiv snapshot used to perform the search — mx_info","text":"commit Commit hash snapshot, taken https://github.com/mcguinlu/medrxivr-data. Defaults \"master\", return info recent snapshot.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide information on the medRxiv snapshot used to perform the search — mx_info","text":"Message snapshot details","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and print output for individual search items — mx_reporter","title":"Search and print output for individual search items — mx_reporter","text":"Search print output individual search items","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_reporter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and print output for individual search items — mx_reporter","text":"","code":"mx_reporter(mx_data, num_results, query, fields, deduplicate, NOT)"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and print output for individual search items — mx_reporter","text":"mx_data mx_dataset filtered date limits num_results number results returned overall search query Character string, vector list fields Fields database search - default Title, Abstract, Authors, Category, DOI. deduplicate Logical. return recent version record. Default TRUE. Vector regular expressions exclude search. Default \"\".","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search preprint data — mx_search","title":"Search preprint data — mx_search","text":"Search preprint data","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search preprint data — mx_search","text":"","code":"mx_search(   data = NULL,   query = NULL,   fields = c(\"title\", \"abstract\", \"authors\", \"category\", \"doi\"),   from_date = NULL,   to_date = NULL,   auto_caps = FALSE,   NOT = \"\",   deduplicate = TRUE,   report = FALSE )"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search preprint data — mx_search","text":"data preprint dataset searched, created either using mx_api_content() mx_snapshot() query Character string, vector list fields Fields database search - default Title, Abstract, Authors, Category, DOI. from_date Defines earliest date interest. Written format \"YYYY-MM-DD\". Note, records published date specified also returned. to_date Defines latest date interest. Written format \"YYYY-MM-DD\". Note, records published date specified also returned. auto_caps search case sensitive, logical specifies whether search automatically allow differing capitalisation search terms. example, TRUE, search \"dementia\" find \"dementia\" also \"Dementia\". Note, term multi-word (e.g. \"systematic review\"), first word automatically capitalised (e.g search find \"systematic review\" \"Systematic review\" find \"Systematic Review\". Note option format terms query arguments (applicable). Vector regular expressions exclude search. Default \"\". deduplicate Logical. return recent version record. Default TRUE. report Logical. Run mx_reporter. Default FALSE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search preprint data — mx_search","text":"","code":"# \\donttest{ # Using the daily snapshot mx_results <- mx_search(data = mx_snapshot(), query = \"dementia\") #> Using medRxiv snapshot - 2022-07-06 01:09 #> Found 427 record(s) matching your search. # }"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_snapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a static snapshot of the medRxiv repository — mx_snapshot","title":"Access a static snapshot of the medRxiv repository — mx_snapshot","text":"[Available medRxiv ] Rather downloading copy   medRxiv database API, can become unavailable peak   usage times, allows users import maintained static snapshot   medRxiv repository.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_snapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a static snapshot of the medRxiv repository — mx_snapshot","text":"","code":"mx_snapshot(commit = \"master\")"},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_snapshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a static snapshot of the medRxiv repository — mx_snapshot","text":"commit Commit hash snapshot, taken https://github.com/mcguinlu/medrxivr-data. Allows reproducible searching specifying exact snapshot used perform searches. Defaults \"master\", return recent snapshot.","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_snapshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a static snapshot of the medRxiv repository — mx_snapshot","text":"Formatted dataframe","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/mx_snapshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access a static snapshot of the medRxiv repository — mx_snapshot","text":"","code":"# \\donttest{ mx_data <- mx_snapshot() #> Using medRxiv snapshot - 2022-07-06 01:09 # }"},{"path":"https://docs.ropensci.org/medrxivr/reference/print_full_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for terms in the dataset — print_full_results","title":"Search for terms in the dataset — print_full_results","text":"Search terms dataset","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/print_full_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for terms in the dataset — print_full_results","text":"","code":"print_full_results(num_results, deduplicate)"},{"path":"https://docs.ropensci.org/medrxivr/reference/print_full_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for terms in the dataset — print_full_results","text":"num_results number searched terms returned deduplicate Logical. return recent version record. Default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/run_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for terms in the dataset — run_search","title":"Search for terms in the dataset — run_search","text":"Search terms dataset","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/run_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for terms in the dataset — run_search","text":"","code":"run_search(mx_data, query, fields, deduplicate, NOT = \"\")"},{"path":"https://docs.ropensci.org/medrxivr/reference/run_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for terms in the dataset — run_search","text":"mx_data mx_dataset filtered date limits query Character string, vector list fields Fields database search - default Title, Abstract, Authors, Category, DOI. deduplicate Logical. return recent version record. Default TRUE. Vector regular expressions exclude search. Default NULL.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/medrxivr/reference/skip_if_api_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Skips API tests if API isn't working correctly — skip_if_api_message","title":"Skips API tests if API isn't working correctly — skip_if_api_message","text":"Skips API tests API working correctly","code":""},{"path":"https://docs.ropensci.org/medrxivr/reference/skip_if_api_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skips API tests if API isn't working correctly — skip_if_api_message","text":"","code":"skip_if_api_message()"},{"path":"https://docs.ropensci.org/medrxivr/news/index.html","id":"medrxivr-development-version","dir":"Changelog","previous_headings":"","what":"medrxivr (development version)","title":"medrxivr (development version)","text":"datatable::fread() now used place vroom::vroom() import snapshot","code":""},{"path":"https://docs.ropensci.org/medrxivr/news/index.html","id":"medrxivr-005","dir":"Changelog","previous_headings":"","what":"medrxivr 0.0.5","title":"medrxivr 0.0.5","text":"CRAN release: 2021-02-24 Major changes: Improved error handling address common bug causes extraction API fail. “total number” records element API metadata frequently artificially inflated. leads overestimation number pages records, turn caused extraction function fail end mx_api_content() encounters empty page. error changed informative messaging expected (per metadata) actual (nrows() returned dataset) number retrievable records. New functionality added mx_search() allows users view number “hits” (records returned) individual element search. extra parameter called report added, gives user option switch functionality . default value parameter set FALSE. functionality added James O’Hare response Issue #13. Users can now pass vector terms parameter rather single exclusion term. New functionality allow user-friendly search operators, including wildcards (“randomi*ation” now find “randomisation” “randomization”) NEAR operator (“systematic NEAR1 review” find “systematic review” “systematic  review”) new argument, auto_caps, mx_search() function allow automatic capitalisation first character search term (e.g. auto_caps = TRUE, “dementia” automatically converted “[Dd]ementia” find “dementia” also “Dementia”). replaces recommendation users capitalise first character using square brackets. However, user defined alternative already place first character search term, left untouched. helper function, mx_caps(), allows users wrap search terms find possible combinations upper- lower-case letters term. example, mx_caps(\"ncov\") converts term “[Nn][Cc][Oo][Vv]” find “NCOV”, “Ncov”, “nCOV”, “nCoV”, etc.","code":""},{"path":"https://docs.ropensci.org/medrxivr/news/index.html","id":"medrxivr-004","dir":"Changelog","previous_headings":"","what":"medrxivr 0.0.4","title":"medrxivr 0.0.4","text":"CRAN release: 2020-12-11 Major changes: Fixed error occurred downloading whole bioRxiv database. caused record 100000 presented scientific notation (e.g. 1e+05), meant API returned invalid response. Change tests fix runtime regardless future growth repositories","code":""},{"path":"https://docs.ropensci.org/medrxivr/news/index.html","id":"medrxivr-003","dir":"Changelog","previous_headings":"","what":"medrxivr 0.0.3","title":"medrxivr 0.0.3","text":"CRAN release: 2020-09-28 Version created submission JOSS CRAN, onboarded rOpenSci following peer-review. Major changes: mx_snapshot() now takes commit argument, allowing specify exactly snapshot database like use. Details commit keys needed . addition, process taking snapshot now managed GitHub actions, meaning lot robust/regular/ Importing snapshot R now significantly faster, vroom::vroom() used place read.csv() functions return data frame now return ungrouped tibbles. /date arguments mx_search() mx_api_content() standardized snake case now expect “YYYY-MM-DD” character format. progress indicator added mx_api_content() provide useful information downloading API. refactoring code taken place reduce duplication code chunks make future maintenance easier. Minor changes: mx_crosscheck() longer uses web-scraping providing number Documentation updated reflect changes, additional sections added vignettes. includes removing references older versions functions names (e.g. mx_raw()). Additional test written, overall test coverage increased. lines (handling exceptional rare errors can’t mocked) marked #nocov. replaced examples across package. examples mx_download() mx_export() now use tempfile() tempdir(), modify users home filespace running examples.","code":""},{"path":"https://docs.ropensci.org/medrxivr/news/index.html","id":"medrxivr-002","dir":"Changelog","previous_headings":"","what":"medrxivr 0.0.2","title":"medrxivr 0.0.2","text":"Major changes: Following release medRxiv API, way snapshot medRxiv site taken changed, resulting accurate snapshot entire repository taken daily (opposed just new articles captured, previously case). introduced breaking changes (e.g. fields argument, “subject” become “category”, “link” become “doi”), result better long-term stability package. Two new functions, mx_api_content() mx_api_doi(), added allow users interact medRxiv API endpoints directly. new vignette documenting functions added. API also allowed improved data collection. “authors” variable searched/returned now contains authors paper opposed just first one. Several additional fields now returned, including corresponding author’s institution, preprint license, DOI published, peer-reviewed version preprint (available). companion app launched, allows build search strategy using user-friendly interface export code needed run directly R. can now define field(s) wish search. default, Title, Abstract, First Author, Subject, Link (includes DOI) fields searched. longer limit number distinct topics can search (previously 5). output mx_search() cleaned make useful future end-users. note, columns names changed, “pdf_name” “extraction_date” variables longer returned.","code":""},{"path":"https://docs.ropensci.org/medrxivr/news/index.html","id":"medrxivr-001","dir":"Changelog","previous_headings":"","what":"medrxivr 0.0.1","title":"medrxivr 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
